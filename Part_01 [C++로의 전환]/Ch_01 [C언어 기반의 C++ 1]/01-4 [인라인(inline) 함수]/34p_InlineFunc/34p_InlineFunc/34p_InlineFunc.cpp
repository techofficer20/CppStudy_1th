#include <iostream>
/* 
인라인 함수는 C언어에서의 매크로 함수의 장점 (전처리기에서 실행 -> 일반적인 함수에 비해 실행속도의 이점이 있음)을 살리고,
단점 (정의하기가 어렵고 복잡한 함수를 정의하는 데 한계가 있음)을 보완하기 위한 C++에서의 함수이다.
그런데, 완전히 매크로 함수의 장점을 가져오지는 못했다. 원래 매크로 함수는 자료형에 의존적이지 않아서 데이터의 손실이 발생하지 않는데,
인라인 함수는 특정 자료형을 써야 해서 데이터 손실이 발생한다. 후에 C++을 공부하면서 템플릿을 공부하면 이 문제를 해결할 수 있긴 하다.
참고사항: 인라인 함수가 길어지면 그냥 함수와 별 다를 게 없어지므로, 주로 간단한 함수에 사용된다고 한다.
*/
inline int SQUARE(int x)
{
	return x * x;
}

int main(void)
{
	std::cout << SQUARE(5) << std::endl;
	std::cout << SQUARE(12) << std::endl;
	return 0;
}